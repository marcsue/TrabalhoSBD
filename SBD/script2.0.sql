-- MySQL Script generated by MySQL Workbench
-- 11/28/16 12:56:31
-- Model: New Model    Version: 1.0
--
--
-- Alunos:
-- Gustavo de Souza Silva
-- Guilherme de Souza Silva
-- Marc Sué
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
--DROP SCHEMA bancodb CASCADE
CREATE SCHEMA IF NOT EXISTS bancodb;

ALTER SCHEMA bancodb OWNER TO postgres; --alterar para root marc

COMMENT ON SCHEMA bancodb IS 'standard public schema';

--
-- TOC entry 179 (class 3079 OID 11855)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2051 (class 0 OID 0)
-- Dependencies: 179
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = bancodb, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

-- -----------------------------------------------------
-- Table `mydb`.`formulario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS formulario (
  id VARCHAR(30) NOT NULL PRIMARY KEY,
  tipo_restricao INTEGER,
  data_inicial DATE,
  data_final DATE
  );


-- -----------------------------------------------------
-- Table `mydb`.`questoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS questoes (
  id VARCHAR(50) NOT NULL PRIMARY KEY,
  pergunta VARCHAR(300)
);

-- -----------------------------------------------------
-- Table `mydb`.`respostas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS respostas (
  id VARCHAR(50) NOT NULL,
  id_questao VARCHAR(50) NOT NULL,
  tiporesp VARCHAR(45),
  conteudo VARCHAR(150),
  CONSTRAINT questoes_fk FOREIGN KEY (id_questao) REFERENCES questoes(id),
  CONSTRAINT primary_key PRIMARY KEY(id,id_questao)
  );


-- -----------------------------------------------------
-- Table `mydb`.`questoes_formulario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS questoes_formulario (
  id_form VARCHAR(50) NOT NULL,
  id_quest VARCHAR(50) NOT NULL,
  CONSTRAINT qf_pk PRIMARY KEY(id_form,id_quest),
  CONSTRAINT form_fk FOREIGN KEY (id_form)REFERENCES formulario (id),
  CONSTRAINT quest_fk FOREIGN KEY (id_quest)REFERENCES questoes (id)
  );


-- -----------------------------------------------------
-- Table `mydb`.`pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS pessoa (
  cpf VARCHAR(11) NOT NULL UNIQUE PRIMARY KEY,
  nome VARCHAR(100),
  data_nascimento DATE,
  emaili VARCHAR(100),
  emails VARCHAR(100),
  tipo_pessoa VARCHAR(45)
 );

-- -----------------------------------------------------
-- Table `mydb`.`unidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS unidade (
  sigla CHAR(5) NOT NULL PRIMARY KEY,
  nome VARCHAR(100),
  areaconhecimento VARCHAR(100),
  tipo_unidade INTEGER NOT NULL
);

-- -----------------------------------------------------
-- Table `mydb`.`curso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS curso (
  sigla CHAR(5) NOT NULL,
  nome VARCHAR(100),
  unidade_academica CHAR(5) NOT NULL,
  CONSTRAINT pk_curso PRIMARY KEY (sigla,unidade_academica),
  CONSTRAINT uni_fk FOREIGN KEY (unidade_academica)REFERENCES unidade (sigla)
);

-- -----------------------------------------------------
-- Table `mydb`.`aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS aluno (
  cpf VARCHAR(11) NOT NULL PRIMARY KEY,
  nro_matricula VARCHAR(25),
  curso CHAR(5) NOT NULL,
  unidade_academica CHAR(5) NOT NULL,
  CONSTRAINT cpf_fk FOREIGN KEY (cpf) REFERENCES pessoa (cpf),
  CONSTRAINT curso_fk FOREIGN KEY (curso,unidade_academica) REFERENCES curso (sigla,unidade_academica)
);

-- -----------------------------------------------------
-- Table `mydb`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS professor (
  cpf VARCHAR(11) NOT NULL PRIMARY KEY,
  siape VARCHAR(50),
  regime_trabalho VARCHAR(45),
  unidade_trabalho CHAR(5),
  CONSTRAINT unidade_fk FOREIGN KEY (unidade_trabalho)REFERENCES unidade (sigla),
  CONSTRAINT pessoa_fk FOREIGN KEY (cpf)REFERENCES pessoa (cpf)
);


-- -----------------------------------------------------
-- Table `mydb`.`tecnico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS tecnico (
  cpf VARCHAR(11) NOT NULL PRIMARY KEY,
  siape VARCHAR(50),
  unidade_trabalho CHAR(5),
  CONSTRAINT unidade_fk FOREIGN KEY (unidade_trabalho)REFERENCES unidade (sigla),
  CONSTRAINT cpf_fk FOREIGN KEY (cpf)REFERENCES pessoa (cpf)
);


-- -----------------------------------------------------
-- Table `mydb`.`terceirizado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS terceirizado (
  cpf VARCHAR(11) NOT NULL PRIMARY KEY,
  empresa VARCHAR(100),
  setor VARCHAR(45),
  CONSTRAINT cpf_fk FOREIGN KEY (cpf)REFERENCES pessoa (cpf)
);


-- -----------------------------------------------------
-- Table `mydb`.`resp_form`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS resp_form (
  cpf VARCHAR(11) NOT NULL,
  id_form VARCHAR(30) NOT NULL,
  CONSTRAINT respform_pk PRIMARY KEY (cpf, id_form),
  CONSTRAINT cpf_fk FOREIGN KEY (cpf)REFERENCES pessoa (cpf),
  CONSTRAINT form_fk FOREIGN KEY (id_form)REFERENCES formulario (id)
);