package banco;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import areasUniversidade.Unidade;
import membrosUniversidade.Aluno;
import membrosUniversidade.Professor;

public class ProfessorDAO {
	
private Connection connection;
	
	public ProfessorDAO() throws ClassNotFoundException
	{
		this.connection = new ConnectionFactory().getConnection();
	}
	
	public boolean insereProfessor(Professor professor)
	{
		try
		{
			String sql = "SELECT insereProfessor(?,?,?,?,?,?,?,?,?);";
			PreparedStatement stmt = connection.prepareStatement(sql);
			
			stmt.setString(1,professor.getCpf());
			stmt.setString(2, professor.getNome());
			stmt.setDate(3, (Date) professor.getNascimento());
			stmt.setString(4, professor.getEmailInstitucional());
			stmt.setString(5, professor.getEmailSecundario());
			stmt.setString(6, "professor");
			stmt.setString(7, professor.getSiape());
			stmt.setString(8, professor.getCurso().getSigla());
			stmt.setString(9, aluno.getCurso().getUnidade().getSigla());
			
			stmt.execute();
			stmt.close();
			
			return true;
			
			return true;
		}
		catch (SQLException e)
		{
			System.out.println(e);
			return false;
		}
	}
	
	public ArrayList<Professor> buscaTodos() throws ClassNotFoundException
	{
		try
		{
			ArrayList<Professor> professores = new ArrayList<Professor>();
			UnidadeDAO unidadeAcademicaDAO = new UnidadeDAO();
			Unidade unidadeAcademica = new Unidade();
			
			
			String sql = "SELECT * FROM professor;";
			PreparedStatement stmt  = connection.prepareStatement(sql);
			
			ResultSet resultado = stmt.executeQuery();
			
			while(resultado.next())
			{
				Professor professor =  new Professor();
				
				
				professor.setCpf(resultado.getString("cpf"));
				professor.setNome(resultado.getString("nome"));
				professor.setEmailInstitucional(resultado.getString("emailInstitucional"));
				professor.setEmailSecundario(resultado.getString("emailSecundario"));
				professor.setNascimento(resultado.getDate("dataNascimento"));
				professor.setSiape(resultado.getString("siape"));
				professor.setRegimeTrabalho(resultado.getString("regimeTrabalho"));
				
			
				unidadeAcademica = unidadeAcademicaDAO.buscaSigla(resultado.getString("siglaUAC"));
				
				professores.add(professor);
			}
			stmt.close();
			
			return professores;
			
		}
		catch (SQLException e)
		{
			System.out.println(e);
			
			return null;
		}
	}
	
	public boolean buscaCpf(String cpf)
	{
		try
		{
			Professor prof =  new Professor();	
			
			String sql = "SELECT cpf FROM professor WHERE cpf=?;";
			PreparedStatement stmt  = connection.prepareStatement(sql);
			stmt.setString(1,cpf);
			
			ResultSet resultado = stmt.executeQuery();
			
			while(resultado.next())
			{
				
				
				prof.setCpf(resultado.getString("cpf"));
			}
			stmt.close();
			
			if(prof.getCpf()==null)
				return false;
			else
				return true;
		}
		catch (SQLException e)
		{
			System.out.println(e);
			
			return false;
		}
		
	}

}
